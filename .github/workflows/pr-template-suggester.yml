name: PR Template Handler
on:
  pull_request:
    types: [opened]

jobs:
  apply-template:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Apply PR Template
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const { base, head } = context.payload.pull_request;

            if (head.ref.startsWith('releases/') && base.ref === 'main') {
              templateFile = '.github/PULL_REQUEST_TEMPLATE/release_to_master.md';
              templateMessage = 'üöÄ Release PR template automatically applied!';
            } else if (head.ref.startsWith('hotfix/') && base.ref === 'main') {
              templateFile = '.github/PULL_REQUEST_TEMPLATE/hotfix_to_master.md';
              templateMessage = 'üî• Hotfix PR template automatically applied!';
            } else if (head.ref.startsWith('releases/') && base.ref === 'dev') {
              templateFile = '.github/PULL_REQUEST_TEMPLATE/merge_down_to_develop.md';
              templateMessage = 'üéÅ Merge Down After Release with template automatically applied!!';
            } else if (base.ref === 'dev') {
              templateFile = '.github/PULL_REQUEST_TEMPLATE/feature_to_develop.md';
              templateMessage = '‚ú® Feature PR template automatically applied!';
            }  else {
              console.log('No matching branch pattern found for PR template');
              return;
            }

            try {
              // Check if template file exists
              if (!fs.existsSync(templateFile)) {
                console.log(`Template file does not exist: ${templateFile}`);
                return;
              }
              
              // Read the template content
              const templateContent = fs.readFileSync(templateFile, 'utf8');
              
              // Update the PR description with the template content
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: templateContent
              });
              
              // Add a comment to notify the user
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: templateMessage
              });
              
              console.log(`Applied PR template: ${templateFile}`);
            } catch (error) {
              console.error(`Error applying PR template: ${error}`);
            }
